name: AWS Workflow

on:
  push:
    branches:
      - stage

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node 20+
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install project dependencies with pnpm
        run: pnpm install

      - name: Build check
        run: pnpm check

      - name: ðŸ”” âžœ Slack Notification
        if: failure()
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: ${{ secrets.SLACK_CHANNEL }}
          config: .github/slack.yml

  Build:
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node 20+
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: aiflowmapper
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: ðŸ”” âžœ Slack Notification
        if: failure()
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: ${{ secrets.SLACK_CHANNEL }}
          config: .github/config/slack.yml

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Deploying to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Deploying aiflowmapper stack"
            if [ "${{ github.ref }}" = "refs/heads/main" ]; then
              sh ~/ai-flow-mapper/deploy.sh
            else
              sh ~/ai-flow-mapper/deploy.stage.sh
            fi

      - name: ðŸ”” âžœ Slack Notification
        if: always()
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: ${{ secrets.SLACK_CHANNEL }}
          config: .github/config/slack.yml
